{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"4RAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCCQAC,EAAa,WACtB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACoBC,EAAgBC,IAAI,UADxC,OACGC,EADH,OAEHJ,EAAS,CACLK,KAAM,cACNC,QAASF,EAASG,OAJnB,2CAAP,uDASSC,EAAY,SAACC,GAAD,8CAAQ,WAAMT,GAAN,eAAAC,EAAA,sEACNC,EAAgBC,IAAhB,iBAA8BM,IADxB,OACvBL,EADuB,OAE7BJ,EAAS,CACLK,KAAM,aACNC,QAASF,EAASG,OAJO,2CAAR,uDClBnBG,E,oNAKO,IACGC,EAASC,KAAKC,MAAdF,KACR,OAAKA,EAKL,yBAAKG,UAAU,UACVH,EAAKI,MALC,S,GARMC,IAAMC,WAuBhBC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAACT,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,EAASG,aAGxB,GAAzBL,CAA6BR,GCrBtCc,E,kLAGEZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKd,UAAU,OAAOe,IAAI,WACtB,uBAAGf,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQzC,OACA,yBAAKT,UAAU,8BAA8BF,KAAKoB,kB,GAzBnChB,IAAMC,WAkCdC,eAJS,SAACC,GACrB,MAAO,CAACO,MAAOP,EAAMO,SAGe,CAAED,mBFpCR,yDAAM,WAAOzB,EAAUiC,GAAjB,SAAAhC,EAAA,sEAC9BD,EAASD,KADqB,OAErBmC,IAAEC,MAAMF,IAAWP,OACjCC,IAAI,UACJS,OACAC,SAAQ,SAAA5B,GAAE,OAAIT,EAASQ,EAAUC,OAAM6B,QALJ,2CAAN,0DEoCnBpB,CAAiDM,GC5BjDe,EARH,WACR,OACI,yBAAKzB,UAAU,gBACX,kBAAC,EAAD,Q,eCFG0B,cAAgB,CAC3Bd,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIsB,EAAW,uCACrC,OAAQA,EAAOpC,MACb,IAAK,cACH,OAAOoC,EAAOnC,QAChB,QACE,OAAOa,IDCTE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOpC,MACV,IAAK,aACD,MAAM,GAAN,mBAAWc,GAAX,CAAkBsB,EAAOnC,UAC7B,QACI,OAAOa,M,QCGbuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.b05a25a2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n});","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n    const userId = _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id))).value();\r\n};\r\n\r\nexport const fetchPosts = () => {\r\n    return async (dispatch) => {\r\n        const response = await jsonPlaceholder.get('/posts');\r\n        dispatch({\r\n            type: 'FETCH_POSTS',\r\n            payload: response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    dispatch({\r\n        type: 'FETCH_USER',\r\n        payload: response.data\r\n    });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    render(){\r\n        const { user } = this.props;\r\n        if (!user){\r\n            return null;\r\n        }\r\n        \r\n        return (\r\n        <div className=\"header\">\r\n            {user.name}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {user: state.users.find(user => user.id === ownProps.userId)}\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(UserHeader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts, fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n\r\n    renderList (){\r\n        return this.props.posts.map((post)=>{\r\n            return(\r\n                <div className=\"item\" key=\"post.id\">\r\n                    <i className=\"large middle aligned icon user\"></i>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"ui relaxed divided ui list\">{this.renderList()}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {posts: state.posts};\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n  switch (action.type){\r\n    case 'FETCH_POSTS':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","export default (state = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_USER':\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.querySelector('#root'));"],"sourceRoot":""}